[{"/Users/refaatmulla/rafeDev/fullstack2020/react/vacation-RefaatMulla-Project/client/src/index.tsx":"1","/Users/refaatmulla/rafeDev/fullstack2020/react/vacation-RefaatMulla-Project/client/src/reportWebVitals.ts":"2","/Users/refaatmulla/rafeDev/fullstack2020/react/vacation-RefaatMulla-Project/client/src/App.tsx":"3","/Users/refaatmulla/rafeDev/fullstack2020/react/vacation-RefaatMulla-Project/client/src/store/index.tsx":"4","/Users/refaatmulla/rafeDev/fullstack2020/react/vacation-RefaatMulla-Project/client/src/store/reducers/mainReducers.tsx":"5","/Users/refaatmulla/rafeDev/fullstack2020/react/vacation-RefaatMulla-Project/client/src/store/actions/index.ts":"6","/Users/refaatmulla/rafeDev/fullstack2020/react/vacation-RefaatMulla-Project/client/src/components/ui-component/nav-bar/index.tsx":"7","/Users/refaatmulla/rafeDev/fullstack2020/react/vacation-RefaatMulla-Project/client/src/components/ui-component/vacation-card/index.tsx":"8","/Users/refaatmulla/rafeDev/fullstack2020/react/vacation-RefaatMulla-Project/client/src/components/containers/pages/vacation-page/index.tsx":"9","/Users/refaatmulla/rafeDev/fullstack2020/react/vacation-RefaatMulla-Project/client/src/store/services/vacations.service.ts":"10","/Users/refaatmulla/rafeDev/fullstack2020/react/vacation-RefaatMulla-Project/client/src/config/index.tsx":"11","/Users/refaatmulla/rafeDev/fullstack2020/react/vacation-RefaatMulla-Project/client/src/components/containers/pages/login-page/index.tsx":"12","/Users/refaatmulla/rafeDev/fullstack2020/react/vacation-RefaatMulla-Project/client/src/store/async-actions/authUser.ts":"13","/Users/refaatmulla/rafeDev/fullstack2020/react/vacation-RefaatMulla-Project/client/src/store/services/auth.service.ts":"14","/Users/refaatmulla/rafeDev/fullstack2020/react/vacation-RefaatMulla-Project/client/src/store/services/token.service.ts":"15","/Users/refaatmulla/rafeDev/fullstack2020/react/vacation-RefaatMulla-Project/client/src/store/services/auth-header.js":"16","/Users/refaatmulla/rafeDev/fullstack2020/react/vacation-RefaatMulla-Project/client/src/components/containers/pages/admin-page/index.tsx":"17","/Users/refaatmulla/rafeDev/fullstack2020/react/vacation-RefaatMulla-Project/client/src/components/ui-component/vacation-modal/index.tsx":"18","/Users/refaatmulla/rafeDev/fullstack2020/react/vacation-RefaatMulla-Project/client/src/store/async-actions/vacations.ts":"19","/Users/refaatmulla/rafeDev/fullstack2020/react/vacation-RefaatMulla-Project/client/src/_helprs/history.js":"20","/Users/refaatmulla/rafeDev/fullstack2020/react/vacation-RefaatMulla-Project/client/src/components/ui-component/filter/index.tsx":"21","/Users/refaatmulla/rafeDev/fullstack2020/react/vacation-RefaatMulla-Project/client/src/components/PrivateRoute.tsx":"22","/Users/refaatmulla/rafeDev/fullstack2020/react/vacation-RefaatMulla-Project/client/src/components/containers/pages/register-page/index.tsx":"23","/Users/refaatmulla/rafeDev/fullstack2020/react/vacation-RefaatMulla-Project/client/src/store/reducers/alertReducer.tsx":"24","/Users/refaatmulla/rafeDev/fullstack2020/react/vacation-RefaatMulla-Project/client/src/store/reducers/index.tsx":"25","/Users/refaatmulla/rafeDev/fullstack2020/react/vacation-RefaatMulla-Project/client/src/components/ui-component/vacation-modal/CustomImageInput.js":"26","/Users/refaatmulla/rafeDev/fullstack2020/react/vacation-RefaatMulla-Project/client/src/components/ui-component/vacation-modal/CustomImageInputStyle.js":"27"},{"size":616,"mtime":1615306657958,"results":"28","hashOfConfig":"29"},{"size":425,"mtime":1613418637198,"results":"30","hashOfConfig":"29"},{"size":1846,"mtime":1617876540037,"results":"31","hashOfConfig":"29"},{"size":139,"mtime":1617552410222,"results":"32","hashOfConfig":"29"},{"size":1029,"mtime":1617830734639,"results":"33","hashOfConfig":"29"},{"size":795,"mtime":1617014879757,"results":"34","hashOfConfig":"29"},{"size":6201,"mtime":1617552907940,"results":"35","hashOfConfig":"29"},{"size":8743,"mtime":1617794059510,"results":"36","hashOfConfig":"29"},{"size":3525,"mtime":1618253284769,"results":"37","hashOfConfig":"29"},{"size":2321,"mtime":1617552426836,"results":"38","hashOfConfig":"29"},{"size":97,"mtime":1618252312943,"results":"39","hashOfConfig":"29"},{"size":6293,"mtime":1617876513130,"results":"40","hashOfConfig":"29"},{"size":1488,"mtime":1617872201775,"results":"41","hashOfConfig":"29"},{"size":750,"mtime":1617552445319,"results":"42","hashOfConfig":"29"},{"size":1219,"mtime":1617142861760,"results":"43","hashOfConfig":"29"},{"size":307,"mtime":1615817673614,"results":"44","hashOfConfig":"29"},{"size":2269,"mtime":1618253099589,"results":"45","hashOfConfig":"29"},{"size":7441,"mtime":1617794268512,"results":"46","hashOfConfig":"29"},{"size":1780,"mtime":1618252263780,"results":"47","hashOfConfig":"29"},{"size":381,"mtime":1617140761742,"results":"48","hashOfConfig":"29"},{"size":459,"mtime":1617694400617,"results":"49","hashOfConfig":"29"},{"size":793,"mtime":1617544000250,"results":"50","hashOfConfig":"29"},{"size":8906,"mtime":1618252398295,"results":"51","hashOfConfig":"29"},{"size":615,"mtime":1617832577584,"results":"52","hashOfConfig":"29"},{"size":229,"mtime":1617548865726,"results":"53","hashOfConfig":"29"},{"size":2866,"mtime":1617793931511,"results":"54","hashOfConfig":"29"},{"size":727,"mtime":1617793102530,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"jxy1r3",{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"58"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"58"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"58"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"58"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"58"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"58"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"58"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"118"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},"/Users/refaatmulla/rafeDev/fullstack2020/react/vacation-RefaatMulla-Project/client/src/index.tsx",[],["121","122"],"/Users/refaatmulla/rafeDev/fullstack2020/react/vacation-RefaatMulla-Project/client/src/reportWebVitals.ts",[],"/Users/refaatmulla/rafeDev/fullstack2020/react/vacation-RefaatMulla-Project/client/src/App.tsx",["123"],"import React, { useEffect } from \"react\";\nimport \"./App.css\";\n\nimport { PrivateRoute, PrivateAdminRoute } from \"./components/PrivateRoute\";\n\nimport VacationsPage from \"./components/containers/pages/vacation-page\";\nimport { LoginPage } from \"./components/containers/pages/login-page\";\nimport AdminPage from \"./components/containers/pages/admin-page\";\nimport NavBarApp from \"./components/ui-component/nav-bar\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { IState } from \"./store/reducers/mainReducers\";\nimport ACTIONS from \"./store/actions\";\nimport { RegisterPage } from \"./components/containers/pages/register-page\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n} from \"react-router-dom\";\nimport { IAlertState } from \"./store/reducers/alertReducer\";\n\nexport interface IAllState {\n  mainReducer: IState;\n  alertReducer: IAlertState;\n}\nfunction App() {\n  const isLogedIn = useSelector(\n    (state: IAllState) => state.mainReducer.currentUser.isLoggedIn\n  );\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch({ type: ACTIONS.ALERT_MESSAGE.CLEAR, payload: \"\" });\n  }, []);\n\n  return (\n    <Router>\n      <div>\n        {isLogedIn && <NavBarApp />}\n        <div>\n          <Switch>\n            <Route key=\"register\" path=\"/register\">\n              <div className=\"vacationCard\">\n                <RegisterPage />\n              </div>\n            </Route>\n            <PrivateRoute exact path=\"/home\" component={VacationsPage} />\n            <PrivateAdminRoute exact path=\"/admin\" component={AdminPage} />\n            <Route key=\"login\" path=\"/\">\n              <div className=\"vacationCard\">\n                <LoginPage />\n              </div>\n            </Route>\n            <Redirect from=\"*\" to=\"/\" />\n          </Switch>\n        </div>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","/Users/refaatmulla/rafeDev/fullstack2020/react/vacation-RefaatMulla-Project/client/src/store/index.tsx",[],"/Users/refaatmulla/rafeDev/fullstack2020/react/vacation-RefaatMulla-Project/client/src/store/reducers/mainReducers.tsx",[],"/Users/refaatmulla/rafeDev/fullstack2020/react/vacation-RefaatMulla-Project/client/src/store/actions/index.ts",[],"/Users/refaatmulla/rafeDev/fullstack2020/react/vacation-RefaatMulla-Project/client/src/components/ui-component/nav-bar/index.tsx",[],"/Users/refaatmulla/rafeDev/fullstack2020/react/vacation-RefaatMulla-Project/client/src/components/ui-component/vacation-card/index.tsx",["124"],"import React, { useEffect, useState } from \"react\";\nimport { makeStyles, Theme, createStyles } from \"@material-ui/core/styles\";\nimport clsx from \"clsx\";\nimport Card from \"@material-ui/core/Card\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport Collapse from \"@material-ui/core/Collapse\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { red } from \"@material-ui/core/colors\";\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport css from \"./style.module.css\";\nimport moment from \"moment\";\nimport { BASE_URL } from \"../../../config\";\nimport DeleteForeverIcon from \"@material-ui/icons/DeleteForever\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport { getIsAdmin } from \"../../../store/services/auth.service\";\nimport {\n  deleteVacationByIdAction,\n  editVacationAction,\n  followVacationByIdAction,\n} from \"../../../store/async-actions/vacations\";\nimport Swal from \"sweetalert2\";\nimport { ModalForm } from \"../vacation-modal\";\nimport withReactContent from \"sweetalert2-react-content\";\nimport { getPayload } from \"../../../store/services/token.service\";\n\nimport { FlightLand, FlightTakeoff } from \"@material-ui/icons\";\nimport { Badge } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      maxWidth: 345,\n      marginTop: \"20px\",\n    },\n    media: {\n      height: 0,\n      paddingTop: \"56.25%\", // 16:9\n    },\n    expand: {\n      transform: \"rotate(0deg)\",\n      marginLeft: \"auto\",\n      transition: theme.transitions.create(\"transform\", {\n        duration: theme.transitions.duration.shortest,\n      }),\n    },\n    expandOpen: {\n      transform: \"rotate(180deg)\",\n    },\n    avatar: {\n      backgroundColor: red[500],\n    },\n    follow: {\n      color: \"rbg(0, 0, 0, 0.54)\",\n      \"&:hover\": {\n        color: red[500],\n      },\n    },\n    isfollowed: {\n      color: red[500],\n    },\n    square: {\n      color: theme.palette.getContrastText(red[500]),\n      backgroundColor: red[500],\n      position: \"relative\",\n      top: \"-20px\",\n      left: \"81%\",\n      padding: \"2px 10px\",\n      borderRadius: \"50%\",\n    },\n  })\n);\n\nconst MySwal = withReactContent(Swal);\nconst showFormModal = (values: any) => {\n  return new Promise((resolve, reject) => {\n    MySwal.fire({\n      html: (\n        <ModalForm\n          title={\"Edit\"}\n          values={values}\n          onSubmit={(values: any) => {\n            resolve(values);\n            Swal.close();\n          }}\n          onCancel={() => {\n            reject();\n            Swal.close();\n          }}\n        />\n      ),\n      willClose: () => reject(),\n      showConfirmButton: false,\n    });\n  });\n};\n\nexport default function VacationCard(props: any) {\n  const classes = useStyles();\n  const [expanded, setExpanded] = React.useState(false);\n  const [isAdmin, setIsAdmin] = useState(false);\n  const [isFollowed, setIsFollowed] = useState(false);\n  const currentUser = getPayload();\n  const handleExpandClick = () => {\n    setExpanded(!expanded);\n  };\n\n  useEffect(() => {\n    const isAdmin = getIsAdmin();\n    if (!isAdmin) return;\n    setIsAdmin(true);\n  }, []);\n\n  useEffect(() => {\n    const followers = props.followerUsers;\n    const splitFollowers = followers.split(\",\");\n    const isFollow = splitFollowers.find((f: any) => {\n      return Number(f) === currentUser.data.id;\n    });\n    currentUser.data.id === Number(isFollow)\n      ? setIsFollowed(true)\n      : setIsFollowed(false);\n  }, [props]);\n\n  // const favIcon = isFollowed ? (\n  //   <FavoriteIcon className={classes.isfollowed} />\n  // ) : (\n  //   <FavoriteIcon className={classes.follow} />\n  // );\n\n  const handelFollowVacation = () => {\n    const follow = followVacationByIdAction(props.id);\n    if (follow) {\n      props.socket.emit(\"reload\", {});\n    }\n  };\n  const handelDeleteVacation = () => {\n    Swal.fire({\n      title: `Are you sure you want to delete ${props.destination} - Vacation ?`,\n      text: \"You won't be able to revert this!\",\n      icon: \"question\",\n      showCancelButton: true,\n      confirmButtonColor: \"#3085d6\",\n      cancelButtonColor: \"#d33\",\n      confirmButtonText: \"Yes, delete it!\",\n    }).then((result) => {\n      if (result.isConfirmed) {\n        const deleteVacation = deleteVacationByIdAction(Number(props.id));\n        if (deleteVacation) {\n          Swal.fire(\"Deleted!\", \"Your file has been deleted.\", \"success\");\n          props.socket.emit(\"reload\", {});\n        }\n      }\n    });\n    //const deleteVacation = deleteVacationByIdAction(Number(props.id));\n  };\n\n  const handelEditVacation = () => {\n    showFormModal({\n      destination: props.destination,\n      description: props.description,\n      startAt: moment(props.startAt).format(\"YYYY-MM-DD\"),\n      endAt: moment(props.endAt).format(\"YYYY-MM-DD\"),\n      price: props.price,\n      file: props.image,\n    })\n      .then((values) => {\n        editVacationAction(Number(props.id), values).then((done) => {\n          props.socket.emit(\"reload\", {});\n          Swal.fire(\"Edited!\", \"Your Vacation has been Edited.\", \"success\");\n        });\n      })\n      .catch((e) => {\n        console.log(e);\n      });\n  };\n\n  const imagePath = props.image?.split(\"/\")[1];\n\n  const timeAgo = (time: Date) => {\n    // moment.locale('ar-eg');\n    return moment(time).fromNow();\n  };\n  const getFirstLatterOfdes = props.destination.charAt(0).toLocaleUpperCase();\n\n  return (\n    <div className={css.vacationCardView}>\n      <Card className={classes.root}>\n        <CardHeader\n          className={css.title}\n          avatar={\n            <Avatar aria-label=\"recipe\" className={classes.avatar}>\n              {getFirstLatterOfdes}\n            </Avatar>\n          }\n          action={\n            <div>\n              {!isAdmin && (\n                <IconButton\n                  aria-label=\"settings\"\n                  onClick={handelFollowVacation}\n                >\n                  <Badge\n                    color=\"secondary\"\n                    badgeContent={props.numberOfFollowers}\n                    showZero\n                  >\n                    {isFollowed ? (\n                      <FavoriteIcon className={classes.isfollowed} />\n                    ) : (\n                      <FavoriteIcon className={classes.follow} />\n                    )}\n                  </Badge>\n                </IconButton>\n              )}\n              {isAdmin && (\n                <div>\n                  <IconButton\n                    aria-label=\"settings\"\n                    onClick={handelDeleteVacation}\n                  >\n                    <DeleteForeverIcon className={classes.follow} />\n                  </IconButton>\n                  <IconButton\n                    aria-label=\"settings\"\n                    onClick={handelEditVacation}\n                  >\n                    <EditIcon className={classes.follow} />\n                  </IconButton>\n                </div>\n              )}\n            </div>\n          }\n          title={props.destination}\n          subheader={timeAgo(props.createdAt)}\n        />\n\n        <CardMedia\n          className={classes.media}\n          image={BASE_URL + \"/\" + imagePath}\n          title=\"Paella dish\"\n        />\n        <Avatar variant=\"square\" className={classes.square}>\n          {props.price}$\n        </Avatar>\n        <CardContent>\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n            {props.description}\n          </Typography>\n        </CardContent>\n        <CardActions disableSpacing>\n          <div className={css.flightSection}>\n            <div className={css.flightDiv}>\n              <FlightLand />\n              <br />({moment(props.start).format(\"YY-MMM-DD\")})\n            </div>\n            <div className={css.flightDiv}>\n              <FlightTakeoff />\n              <br />({moment(props.endAt).format(\"YY-MMM-DD\")})\n            </div>\n          </div>\n          <IconButton\n            className={clsx(classes.expand, {\n              [classes.expandOpen]: expanded,\n            })}\n            onClick={handleExpandClick}\n            aria-expanded={expanded}\n            aria-label=\"show more\"\n          >\n            <ExpandMoreIcon />\n          </IconButton>\n        </CardActions>\n        <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\n          <CardContent>\n            <Typography paragraph>{props.description}</Typography>\n          </CardContent>\n        </Collapse>\n      </Card>{\" \"}\n    </div>\n  );\n}\n","/Users/refaatmulla/rafeDev/fullstack2020/react/vacation-RefaatMulla-Project/client/src/components/containers/pages/vacation-page/index.tsx",["125"],"/Users/refaatmulla/rafeDev/fullstack2020/react/vacation-RefaatMulla-Project/client/src/store/services/vacations.service.ts",["126","127","128"],"import axios from \"axios\";\nimport { BASE_URL } from \"../../config\";\n\nconst API_URL = `${BASE_URL}/vacation`;\nasync function getVacationsService() {\n  const { data } = await axios.get(`${API_URL}`, {\n    headers: { \"x-access-token\": localStorage.getItem(\"VacationApp\") },\n  });\n\n  return data.result;\n}\n\nasync function addNewVacationsService(newVacation: any) {\n  const { destination, description, startAt, endAt, price, file } = newVacation;\n  const formData = new FormData();\n  formData.append(\"destination\", destination);\n  formData.append(\"description\", description);\n  formData.append(\"startAt\", startAt);\n  formData.append(\"endAt\", endAt);\n  formData.append(\"price\", price);\n  formData.append(\"file\", file);\n\n  const { data } = await axios.post(`${API_URL}/createVacation`, formData, {\n    headers: {\n      \"x-access-token\": localStorage.getItem(\"VacationApp\"),\n      \"content-type\": \"multipart/form-data\",\n    },\n  });\n\n  return data.result;\n}\n\nasync function editeVacationsService(vacationId: number, vacationDetails: any) {\n  console.log(\"edit\", vacationDetails);\n  const {\n    destination,\n    description,\n    startAt,\n    endAt,\n    price,\n    file,\n  } = vacationDetails;\n  const formData = new FormData();\n  formData.append(\"destination\", destination);\n  formData.append(\"description\", description);\n  formData.append(\"startAt\", startAt);\n  formData.append(\"endAt\", endAt);\n  formData.append(\"price\", price);\n  formData.append(\"file\", file);\n  const { data } = await axios.put(`${API_URL}` + \"/\" + vacationId, formData, {\n    headers: {\n      \"x-access-token\": localStorage.getItem(\"VacationApp\"),\n      \"content-type\": \"multipart/form-data\",\n    },\n  });\n\n  return data.result;\n}\n\nasync function deleteVacationByIdService(vacationId: number) {\n  const { data } = await axios.delete(`${API_URL}` + \"/\" + vacationId, {\n    headers: { \"x-access-token\": localStorage.getItem(\"VacationApp\") },\n  });\n  return data;\n}\n\nasync function followVacationsService(vacationId: any) {\n  const { data } = await axios.post(\n    `${API_URL}` + \"/follow\",\n    { vacationId },\n    {\n      headers: { \"x-access-token\": localStorage.getItem(\"VacationApp\") },\n    }\n  );\n  return data;\n}\n\nexport {\n  getVacationsService,\n  addNewVacationsService,\n  deleteVacationByIdService,\n  editeVacationsService,\n  followVacationsService,\n};\n","/Users/refaatmulla/rafeDev/fullstack2020/react/vacation-RefaatMulla-Project/client/src/config/index.tsx",[],"/Users/refaatmulla/rafeDev/fullstack2020/react/vacation-RefaatMulla-Project/client/src/components/containers/pages/login-page/index.tsx",["129"],"import React, { useEffect, useState } from \"react\";\nimport {\n  Card,\n  CardContent,\n  CardActions,\n  TextField,\n  Button,\n  Paper,\n  InputAdornment,\n} from \"@material-ui/core\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport css from \"./style.module.css\";\nimport NameIcon from \"@material-ui/icons/SupervisorAccount\";\nimport LockIcon from \"@material-ui/icons/Lock\";\n\nimport { LoginAction } from \"../../../../store/async-actions/authUser\";\nimport { useSelector } from \"react-redux\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { Alert } from \"@material-ui/lab\";\nimport { IAllState } from \"../../../../App\";\nimport { Formik, Form } from \"formik\";\nimport * as Yup from \"yup\";\n\nconst LoginSchema = Yup.object().shape({\n  userName: Yup.string()\n    .required(\"User Name is required\")\n    .min(3, \"User Name Too Short!\")\n    .max(250, \"User Name Too Long!\"),\n  password: Yup.string().required(\"password is required\"),\n});\n\nexport function LoginPage() {\n  const history = useHistory();\n\n  const userFeild: any = {\n    userName: \"\",\n    password: \"\",\n  };\n\n  const [loginDetails, setUserLoginDetails] = useState(userFeild);\n  const currentUser = useSelector(\n    (state: IAllState) => state.mainReducer.currentUser\n  );\n  const alert = useSelector((state: IAllState) => state.alertReducer);\n\n  function onChangeUserLoginDetails(key: string, value: string) {\n    setUserLoginDetails({ ...loginDetails, [key]: value });\n  }\n\n  useEffect(() => {\n    if (currentUser.isLoggedIn === true) history.push(\"/home\");\n  }, []);\n\n  async function sendLoginReuqest() {\n    if (!loginDetails.userName || !loginDetails.password) return;\n    const result = await LoginAction(loginDetails);\n    if (!result) return;\n    const { accessToken, message } = result;\n    if (message === \"redirect\" && accessToken) {\n      setTimeout(() => {\n        window.location.reload();\n        history.push(\"/home\");\n      }, 1500);\n    }\n  }\n\n  return (\n    <div>\n      <div className={css.grow}>\n        <AppBar className={css.appBar} position=\"static\">\n          <div className={css.wrapper}>\n            <div className={css.header}>- Welcom to Vacation App - </div>\n          </div>\n        </AppBar>\n      </div>\n      <div className={css.loginDiv}>\n        <Paper>\n          <Formik\n            initialValues={userFeild}\n            onSubmit={sendLoginReuqest}\n            validationSchema={LoginSchema}\n            render={({\n              isValid,\n              values,\n              handleBlur,\n              handleChange,\n              touched,\n              errors,\n            }) => {\n              return (\n                <Form>\n                  <Card className={css.cardDiv}>\n                    <h2>Login please</h2>\n                    <CardContent>\n                      <div className={css.alert}>\n                        {alert.type === \"error\" && (\n                          <Alert severity=\"error\">\n                            <strong>{alert.message}</strong>\n                          </Alert>\n                        )}\n                        {alert.type === \"success\" && (\n                          <Alert severity=\"success\">\n                            <strong>{alert.message}</strong>\n                          </Alert>\n                        )}\n                      </div>\n\n                      <TextField\n                        id=\"userName\"\n                        name=\"userName\"\n                        label=\"user Name\"\n                        value={values.userName}\n                        onChange={(e) => {\n                          handleChange(e);\n                          let userName = e.currentTarget.value;\n                          onChangeUserLoginDetails(e?.target.name, userName);\n                        }}\n                        onBlur={handleBlur}\n                        helperText={touched.userName ? errors.userName : \"\"}\n                        error={touched.userName && Boolean(errors.userName)}\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n                        InputProps={{\n                          startAdornment: (\n                            <InputAdornment position=\"start\">\n                              <NameIcon />\n                            </InputAdornment>\n                          ),\n                        }}\n                      />\n\n                      <TextField\n                        id=\"password\"\n                        label=\"password\"\n                        type=\"password\"\n                        name=\"password\"\n                        value={values.password}\n                        onChange={(e) => {\n                          handleChange(e);\n                          let password = e.currentTarget.value;\n                          onChangeUserLoginDetails(e?.target.name, password);\n                        }}\n                        onBlur={handleBlur}\n                        helperText={touched.password ? errors.password : \"\"}\n                        error={touched.password && Boolean(errors.password)}\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n                        InputProps={{\n                          startAdornment: (\n                            <InputAdornment position=\"start\">\n                              <LockIcon />\n                            </InputAdornment>\n                          ),\n                        }}\n                      />\n                    </CardContent>\n                    <CardActions style={{ justifyContent: \"space-between\" }}>\n                      <Link to=\"/register\">\n                        <Button variant=\"contained\" color=\"primary\">\n                          Register\n                        </Button>\n                      </Link>\n                      <Button\n                        disabled={!isValid}\n                        onClick={sendLoginReuqest}\n                        variant=\"contained\"\n                        color=\"secondary\"\n                      >\n                        Login\n                      </Button>\n                    </CardActions>\n                  </Card>\n                </Form>\n              );\n            }}\n          />\n        </Paper>\n      </div>\n    </div>\n  );\n}\n","/Users/refaatmulla/rafeDev/fullstack2020/react/vacation-RefaatMulla-Project/client/src/store/async-actions/authUser.ts",[],"/Users/refaatmulla/rafeDev/fullstack2020/react/vacation-RefaatMulla-Project/client/src/store/services/auth.service.ts",["130"],"import axios from \"axios\";\nimport { BASE_URL } from \"../../config\";\nimport { IUser, IUserRegister } from \"../../interfaces\";\nimport { getPayload } from \"./token.service\";\n\nconst API_URL = `${BASE_URL}/auth`;\n\nasync function loginService(userDetails: IUser) {\n  const { data } = await axios.post(`${API_URL}/login`, userDetails);\n  return data;\n}\n\nasync function registerService(userDetails: IUserRegister) {\n  const { data } = await axios.post(`${API_URL}/register`, userDetails);\n  return data;\n}\n\nfunction getIsAdmin() {\n  const user = getPayload();\n  if (!user) return;\n  const { role } = user.data;\n  if (!role) return;\n\n  const isAdmin = role == \"Admin\" ? true : false;\n  return isAdmin;\n}\n\nexport { loginService, getIsAdmin, registerService };\n","/Users/refaatmulla/rafeDev/fullstack2020/react/vacation-RefaatMulla-Project/client/src/store/services/token.service.ts",["131"],"function setToken(token: string) {\n  localStorage.setItem(\"VacationApp\", token);\n}\nfunction getToken() {\n  return localStorage.getItem(\"VacationApp\");\n}\nfunction deleteToken() {\n  localStorage.removeItem(\"VacationApp\");\n}\nfunction getPayload() {\n  const token = getToken();\n  let payload;\n  if (token) {\n    try {\n      payload = token.split(\".\")[1];\n      payload = JSON.parse(atob(payload));\n      const checkExpirationDate = getExpirationDate(payload);\n      if (!checkExpirationDate) return;\n      const checkIfExpired = isExpired(checkExpirationDate);\n      if (checkIfExpired) {\n        localStorage.removeItem(\"VacationApp\");\n        window.location.href = \"/\";\n        throw new Error(\"token has been expaired\");\n      }\n      return payload;\n    } catch (error) {\n      console.log(error);\n      if (payload == undefined) {\n        return deleteToken();\n      }\n    }\n  }\n}\n\nfunction getExpirationDate(jwtToken?: any) {\n  if (!jwtToken) {\n    return null;\n  }\n  const checkExpirationDate = jwtToken.exp * 1000 || null;\n  return checkExpirationDate;\n}\n\nfunction isExpired(exp?: number) {\n  if (!exp) {\n    return false;\n  }\n\n  return Date.now() > exp;\n}\n\nexport { setToken, getToken, deleteToken, getPayload };\n","/Users/refaatmulla/rafeDev/fullstack2020/react/vacation-RefaatMulla-Project/client/src/store/services/auth-header.js",[],"/Users/refaatmulla/rafeDev/fullstack2020/react/vacation-RefaatMulla-Project/client/src/components/containers/pages/admin-page/index.tsx",[],"/Users/refaatmulla/rafeDev/fullstack2020/react/vacation-RefaatMulla-Project/client/src/components/ui-component/vacation-modal/index.tsx",["132"],"import React, { useState } from \"react\";\nimport { Formik, Form, ErrorMessage, Field } from \"formik\";\nimport css from \"./style.module.css\";\n\nimport { TextField } from \"@material-ui/core\";\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardDatePicker,\n} from \"@material-ui/pickers\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport moment from \"moment\";\nimport { BASE_URL } from \"../../../config\";\nimport * as Yup from \"yup\";\nimport CustomImageInput from \"./CustomImageInput\";\n\nconst FILE_SIZE = 160 * 1024;\nconst SUPPORTED_FORMATS = [\"image/jpg\", \"image/jpeg\", \"image/gif\", \"image/png\"];\n\nconst VacationSchema = Yup.object().shape({\n  access: Yup.number().nullable(),\n  destination: Yup.string()\n    .required(\"Destination is required\")\n    .min(3, \"Destination Too Short!\")\n    .max(250, \"Destination Too Long!\"),\n  description: Yup.string()\n    .required(\"Description is required\")\n    .min(3, \"Description Too Short!\"),\n  startAt: Yup.date(),\n  endAt: Yup.date().min(\n    Yup.ref(\"startAt\"),\n    \"end date can't be before start date\"\n  ),\n  price: Yup.number().required(\"price is required\"),\n  file: Yup.mixed()\n    .required(\"A file is required\")\n    .test(\n      \"fileSize\",\n      \"File too large\",\n      (value) => value && value.size <= FILE_SIZE\n    )\n    .test(\n      \"fileFormat\",\n      \"Unsupported Format\",\n      (value) => value && SUPPORTED_FORMATS.includes(value.type)\n    ),\n});\n\nexport function ModalForm(props: any) {\n  const { title, values, onSubmit, onCancel } = props;\n  const imagePath = values.file?.split(\"/\")[1];\n  const [start, setStart] = useState(\"\");\n  const [end, setEnd] = useState(\"\");\n\n  const validateDates = () => {\n    if (start > end) return true;\n    return false;\n  };\n  return (\n    <div>\n      <h3 className={css.error}>{title} Vacation</h3>\n\n      <Formik\n        initialValues={values}\n        onSubmit={onSubmit}\n        validationSchema={VacationSchema}\n        render={({\n          isValid,\n          values,\n          touched,\n          errors,\n          handleBlur,\n          handleChange,\n          setFieldValue,\n        }) => {\n          return (\n            <Form>\n              <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                <div>\n                  <Field\n                    as={TextField}\n                    label=\"Destination\"\n                    value={values.destination}\n                    fullWidth\n                    required\n                    type=\"text\"\n                    name=\"destination\"\n                    onChange={handleChange}\n                    helperText={\n                      <ErrorMessage\n                        component=\"div\"\n                        className={css.error}\n                        name=\"destination\"\n                      />\n                    }\n                  />\n                </div>\n                <div>\n                  <Field\n                    as={TextField}\n                    helperText={\n                      <ErrorMessage\n                        component=\"div\"\n                        className={css.error}\n                        name=\"description\"\n                      />\n                    }\n                    label=\"description\"\n                    fullWidth\n                    type=\"text\"\n                    name=\"description\"\n                    value={values.description}\n                    onChange={handleChange}\n                  />\n                </div>\n\n                <div>\n                  <Field\n                    as={KeyboardDatePicker}\n                    inputVariant=\"outlined\"\n                    margin=\"normal\"\n                    fullWidth\n                    label=\"startAt\"\n                    format=\"MM/dd/yyyy\"\n                    value={values.startAt}\n                    onChange={(date: any) => {\n                      setStart(moment(date).format(\"YYYY-MM-DD\"));\n                      setFieldValue(\n                        \"startAt\",\n                        moment(date).format(\"YYYY-MM-DD\")\n                      );\n                    }}\n                  />\n                </div>\n                <div>\n                  <Field\n                    as={KeyboardDatePicker}\n                    fullWidth\n                    inputVariant=\"outlined\"\n                    label=\"To\"\n                    format=\"MM/dd/yyyy\"\n                    value={values.endAt}\n                    onChange={(date: Date) => {\n                      setEnd(moment(date).format(\"YYYY-MM-DD\"));\n                      setFieldValue(\"endAt\", moment(date).format(\"YYYY-MM-DD\"));\n                    }}\n                    validate={validateDates}\n                  />\n                  {errors.endAt && touched.endAt ? (\n                    <div className={css.error}>{errors.endAt}</div>\n                  ) : (\n                    <div className={css.error}>{errors.endAt}</div>\n                  )}\n                </div>\n                <div>\n                  <Field\n                    as={TextField}\n                    helperText={\n                      <ErrorMessage\n                        component=\"div\"\n                        className={css.error}\n                        name=\"price\"\n                      />\n                    }\n                    label=\"price\"\n                    fullWidth\n                    type=\"number\"\n                    name=\"price\"\n                    value={values.price}\n                    onChange={handleChange}\n                  />\n                </div>\n                <div>\n                  {title === \"Edit\" && (\n                    <img\n                      width=\"100%\"\n                      alt=\"current photo\"\n                      src={BASE_URL + \"/\" + imagePath}\n                    />\n                  )}\n                </div>\n                {/* <div>\n                  <Input\n                    type=\"file\"\n                    name=\"file\"\n                    onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                      setFieldValue(\"file\", e.target.files![0]!);\n                    }}\n                  />\n                </div> */}\n                <Field\n                  name=\"file\"\n                  component={CustomImageInput}\n                  title=\"Select a file\"\n                  setFieldValue={setFieldValue}\n                  errorMessage={errors[\"file\"] ? errors[\"file\"] : undefined}\n                  touched={touched[\"file\"]}\n                  style={{ display: \"flex\" }}\n                  onBlur={handleBlur}\n                />\n\n                <div\n                  className=\"swal2-actions\"\n                  style={{ display: \"flex\", fontSize: \"0.9em\" }}\n                >\n                  <button\n                    disabled={!isValid}\n                    type=\"submit\"\n                    className=\"swal2-confirm swal2-styled\"\n                    style={{\n                      backgroundColor: \"#f44336\",\n                    }}\n                  >\n                    OK\n                  </button>\n                  <button\n                    onClick={onCancel}\n                    type=\"button\"\n                    className=\"swal2-cancel swal2-styled\"\n                    style={{\n                      display: \"inline-block\",\n                    }}\n                  >\n                    Cancel\n                  </button>\n                </div>\n              </MuiPickersUtilsProvider>\n            </Form>\n          );\n        }}\n      />\n    </div>\n  );\n}\n","/Users/refaatmulla/rafeDev/fullstack2020/react/vacation-RefaatMulla-Project/client/src/store/async-actions/vacations.ts",["133","134"],"/Users/refaatmulla/rafeDev/fullstack2020/react/vacation-RefaatMulla-Project/client/src/_helprs/history.js",[],["135","136"],"/Users/refaatmulla/rafeDev/fullstack2020/react/vacation-RefaatMulla-Project/client/src/components/ui-component/filter/index.tsx",[],"/Users/refaatmulla/rafeDev/fullstack2020/react/vacation-RefaatMulla-Project/client/src/components/PrivateRoute.tsx",[],"/Users/refaatmulla/rafeDev/fullstack2020/react/vacation-RefaatMulla-Project/client/src/components/containers/pages/register-page/index.tsx",["137","138"],"/Users/refaatmulla/rafeDev/fullstack2020/react/vacation-RefaatMulla-Project/client/src/store/reducers/alertReducer.tsx",[],"/Users/refaatmulla/rafeDev/fullstack2020/react/vacation-RefaatMulla-Project/client/src/store/reducers/index.tsx",[],"/Users/refaatmulla/rafeDev/fullstack2020/react/vacation-RefaatMulla-Project/client/src/components/ui-component/vacation-modal/CustomImageInput.js",["139","140"],"import React, { Component } from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Icon from \"@material-ui/core/Icon\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport FolderIcon from \"@material-ui/icons/Folder\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport customImageInputStyle from \"./CustomImageInputStyle\";\nimport classnames from \"classnames\";\n\nclass CustomImageInput extends Component {\n  constructor(props) {\n    super(props);\n    this.fileUpload = React.createRef();\n    this.showFileUpload = this.showFileUpload.bind(this);\n    this.handleImageChange = this.handleImageChange.bind(this);\n  }\n\n  state = {\n    file: undefined,\n    imagePreviewUrl: undefined,\n  };\n\n  showFileUpload() {\n    if (this.fileUpload) {\n      this.fileUpload.current.click();\n    }\n  }\n\n  handleImageChange(e) {\n    e.preventDefault();\n    let reader = new FileReader();\n    let file = e.target.files[0];\n    if (file) {\n      reader.onloadend = () => {\n        this.setState({\n          file: file,\n          imagePreviewUrl: reader.result,\n        });\n      };\n      reader.readAsDataURL(file);\n      this.props.setFieldValue(this.props.field.name, file);\n    }\n  }\n\n  showPreloadImage() {\n    const { errorMessage, classes } = this.props;\n    const { name } = this.props.field;\n    const { file, imagePreviewUrl } = this.state;\n\n    let comp = null;\n\n    if (errorMessage) {\n      comp = <Icon style={{ fontSize: 36 }}>error_outline</Icon>;\n    } else if (file) {\n      comp = (\n        <img className={classes.avatarThumb} src={imagePreviewUrl} alt=\"...\" />\n      );\n    } else {\n      comp = <FolderIcon style={{ fontSize: 36 }} />;\n    }\n    return comp;\n  }\n\n  componentDidMount() {\n    console.log(this.fileUpload.current);\n  }\n\n  render() {\n    const { errorMessage, title, classes } = this.props;\n    const { name, onBlur } = this.props.field;\n\n    const avatarStyle = classnames(\n      classes.bigAvatar,\n      this.state.file ? [classes.whiteBack] : [classes.primaryBack],\n      { [classes.errorBack]: errorMessage }\n    );\n\n    return (\n      <div className={classes.container}>\n        <input\n          className={classes.hidden}\n          id={name}\n          name={name}\n          type=\"file\"\n          onChange={this.handleImageChange}\n          ref={this.fileUpload}\n          // onBlur={onBlur}\n          //className=\"form-control\"\n        />\n        <Typography className={classes.title} variant=\"h5\">\n          {title}\n        </Typography>\n        <Avatar className={avatarStyle} onClick={this.showFileUpload}>\n          {this.showPreloadImage()}\n        </Avatar>\n\n        {errorMessage ? (\n          <Typography variant=\"caption\" color=\"error\">\n            {errorMessage}\n          </Typography>\n        ) : null}\n      </div>\n    );\n  }\n}\n\nexport default withStyles(customImageInputStyle)(CustomImageInput);\n",["141","142"],"/Users/refaatmulla/rafeDev/fullstack2020/react/vacation-RefaatMulla-Project/client/src/components/ui-component/vacation-modal/CustomImageInputStyle.js",[],{"ruleId":"143","replacedBy":"144"},{"ruleId":"145","replacedBy":"146"},{"ruleId":"147","severity":1,"message":"148","line":34,"column":6,"nodeType":"149","endLine":34,"endColumn":8,"suggestions":"150"},{"ruleId":"147","severity":1,"message":"151","line":128,"column":6,"nodeType":"149","endLine":128,"endColumn":13,"suggestions":"152"},{"ruleId":"153","severity":1,"message":"154","line":92,"column":15,"nodeType":"155","messageId":"156","endLine":92,"endColumn":26},{"ruleId":"157","severity":1,"message":"158","line":50,"column":49,"nodeType":"159","messageId":"160","endLine":50,"endColumn":50},{"ruleId":"157","severity":1,"message":"158","line":61,"column":52,"nodeType":"159","messageId":"160","endLine":61,"endColumn":53},{"ruleId":"157","severity":1,"message":"158","line":69,"column":18,"nodeType":"159","messageId":"160","endLine":69,"endColumn":19},{"ruleId":"147","severity":1,"message":"161","line":52,"column":6,"nodeType":"149","endLine":52,"endColumn":8,"suggestions":"162"},{"ruleId":"163","severity":1,"message":"164","line":24,"column":24,"nodeType":"159","messageId":"165","endLine":24,"endColumn":26},{"ruleId":"163","severity":1,"message":"164","line":28,"column":19,"nodeType":"159","messageId":"165","endLine":28,"endColumn":21},{"ruleId":"166","severity":1,"message":"167","line":174,"column":21,"nodeType":"168","endLine":178,"endColumn":23},{"ruleId":"153","severity":1,"message":"169","line":43,"column":11,"nodeType":"155","messageId":"156","endLine":43,"endColumn":17},{"ruleId":"153","severity":1,"message":"169","line":49,"column":11,"nodeType":"155","messageId":"156","endLine":49,"endColumn":17},{"ruleId":"143","replacedBy":"170"},{"ruleId":"145","replacedBy":"171"},{"ruleId":"163","severity":1,"message":"164","line":71,"column":18,"nodeType":"159","messageId":"165","endLine":71,"endColumn":20},{"ruleId":"147","severity":1,"message":"148","line":79,"column":6,"nodeType":"149","endLine":79,"endColumn":8,"suggestions":"172"},{"ruleId":"173","severity":1,"message":"174","line":47,"column":13,"nodeType":"155","messageId":"156","endLine":47,"endColumn":17},{"ruleId":"173","severity":1,"message":"175","line":70,"column":19,"nodeType":"155","messageId":"156","endLine":70,"endColumn":25},{"ruleId":"143","replacedBy":"144"},{"ruleId":"145","replacedBy":"146"},"no-native-reassign",["176"],"no-negated-in-lhs",["177"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["178"],"React Hook useEffect has a missing dependency: 'currentUser.data.id'. Either include it or remove the dependency array.",["179"],"@typescript-eslint/no-unused-vars","'addVacation' is assigned a value but never used.","Identifier","unusedVar","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","React Hook useEffect has missing dependencies: 'currentUser.isLoggedIn' and 'history'. Either include them or remove the dependency array.",["180"],"eqeqeq","Expected '===' and instead saw '=='.","unexpected","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'result' is assigned a value but never used.",["176"],["177"],["181"],"no-unused-vars","'name' is assigned a value but never used.","'onBlur' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"182","fix":"183"},{"desc":"184","fix":"185"},{"desc":"186","fix":"187"},{"desc":"182","fix":"188"},"Update the dependencies array to be: [dispatch]",{"range":"189","text":"190"},"Update the dependencies array to be: [currentUser.data.id, props]",{"range":"191","text":"192"},"Update the dependencies array to be: [currentUser.isLoggedIn, history]",{"range":"193","text":"194"},{"range":"195","text":"190"},[1123,1125],"[dispatch]",[3764,3771],"[currentUser.data.id, props]",[1525,1527],"[currentUser.isLoggedIn, history]",[2405,2407]]